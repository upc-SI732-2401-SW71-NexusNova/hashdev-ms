on:
  push:
    branches:
    - deploy
env:
  CONTAINER_REGISTRY_LOGIN_SERVER: registry20240625221639.azurecr.io
  CLUSTER_NAME: hashdevcluster
  CLUSTER_RESOURCE_GROUP: hashdevresource2024
  DEPLOYMENT_MANIFEST_PATH: '[./manifests/deployment.yml]'
jobs:
  ApigatewayWithOcelot_buildImageAndDeploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.registry20240625221639_USERNAME_DA2F }}
        password: ${{ secrets.registry20240625221639_PASSWORD_DA2F }}
    - name: Build and push Docker image to Azure container registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/apigatewaywithocelot:${{ github.sha }}
        file: ApigatewayWithOcelot\Dockerfile
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.hashdevcluster_SPN }}
    - name: Set AKS context
      uses: azure/aks-set-context
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Deploy manifests to AKS
      uses: azure/k8s-deploy
      with:
        action: deploy
        images: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/apigatewaywithocelot:${{ github.sha }}
        manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        namespace: default
  ApigatewayWithYarp_buildImageAndDeploy:
    runs-on: ubuntu-latest
    needs: ApigatewayWithOcelot_buildImageAndDeploy
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.registry20240625221639_USERNAME_DA2F }}
        password: ${{ secrets.registry20240625221639_PASSWORD_DA2F }}
    - name: Build and push Docker image to Azure container registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/apigatewaywithyarp:${{ github.sha }}
        file: ApigatewayWithYarp\Dockerfile
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.hashdevcluster_SPN }}
    - name: Set AKS context
      uses: azure/aks-set-context
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Deploy manifests to AKS
      uses: azure/k8s-deploy
      with:
        action: deploy
        images: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/apigatewaywithyarp:${{ github.sha }}
        manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        namespace: default
  ConferenceManagerService_buildImageAndDeploy:
    runs-on: ubuntu-latest
    needs: ApigatewayWithYarp_buildImageAndDeploy
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.registry20240625221639_USERNAME_DA2F }}
        password: ${{ secrets.registry20240625221639_PASSWORD_DA2F }}
    - name: Build and push Docker image to Azure container registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/conferencemanagerservice:${{ github.sha }}
        file: ConferenceManagerService\Dockerfile
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.hashdevcluster_SPN }}
    - name: Set AKS context
      uses: azure/aks-set-context
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Deploy manifests to AKS
      uses: azure/k8s-deploy
      with:
        action: deploy
        images: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/conferencemanagerservice:${{ github.sha }}
        manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        namespace: default
  FeedManagerService_buildImageAndDeploy:
    runs-on: ubuntu-latest
    needs: ConferenceManagerService_buildImageAndDeploy
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.registry20240625221639_USERNAME_DA2F }}
        password: ${{ secrets.registry20240625221639_PASSWORD_DA2F }}
    - name: Build and push Docker image to Azure container registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/feedmanagerservice:${{ github.sha }}
        file: FeedManagerService\Dockerfile
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.hashdevcluster_SPN }}
    - name: Set AKS context
      uses: azure/aks-set-context
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Deploy manifests to AKS
      uses: azure/k8s-deploy
      with:
        action: deploy
        images: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/feedmanagerservice:${{ github.sha }}
        manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        namespace: default
  PaymentManagerService_buildImageAndDeploy:
    runs-on: ubuntu-latest
    needs: FeedManagerService_buildImageAndDeploy
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.registry20240625221639_USERNAME_DA2F }}
        password: ${{ secrets.registry20240625221639_PASSWORD_DA2F }}
    - name: Build and push Docker image to Azure container registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/paymentmanagerservice:${{ github.sha }}
        file: PaymentManagerService\Dockerfile
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.hashdevcluster_SPN }}
    - name: Set AKS context
      uses: azure/aks-set-context
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Deploy manifests to AKS
      uses: azure/k8s-deploy
      with:
        action: deploy
        images: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/paymentmanagerservice:${{ github.sha }}
        manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        namespace: default
  UserManagerService_buildImageAndDeploy:
    runs-on: ubuntu-latest
    needs: PaymentManagerService_buildImageAndDeploy
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.registry20240625221639_USERNAME_DA2F }}
        password: ${{ secrets.registry20240625221639_PASSWORD_DA2F }}
    - name: Build and push Docker image to Azure container registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/usermanagerservice:${{ github.sha }}
        file: UserManagerService\Dockerfile
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.hashdevcluster_SPN }}
    - name: Set AKS context
      uses: azure/aks-set-context
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    - name: Deploy manifests to AKS
      uses: azure/k8s-deploy
      with:
        action: deploy
        images: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/usermanagerservice:${{ github.sha }}
        manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        namespace: default
